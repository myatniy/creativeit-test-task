{"version":3,"sources":["App.js","index.js"],"names":["Search","props","useState","searchQuery","setSearchQuery","button","length","onClick","onSearchQueryChange","className","type","placeholder","value","onChange","e","preventDefault","newSearchQuery","target","App","state","error","isLoaded","repositories","setState","search","items","query","filter","item","name","toLowerCase","indexOf","fetch","then","res","json","result","this","visibleData","message","map","id","created_at","updated_at","html_url","ca","Date","parse","ua","href","getHours","getMinutes","getSeconds","getDay","getMonth","getFullYear","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAIMA,EAAS,SAACC,GAAW,IAAD,EACgBC,mBAAS,IADzB,mBACfC,EADe,KACFC,EADE,KAehBC,EAASF,EAAYG,OAAS,EAAI,wBAAQC,QALhC,WACZH,EAAe,IACfH,EAAMO,oBAAoB,KAGU,mBAA2C,KAEnF,OACI,sBAAKC,UAAU,mBAAf,UACI,uBACIC,KAAK,OACLC,YAAY,iBACZC,MAAOT,EACPU,SApBgB,SAACC,GACzBA,EAAEC,iBACF,IAAMC,EAAiBF,EAAEG,OAAOL,MAChCR,EAAeY,GACff,EAAMO,oBAAoBQ,MAkBrBX,MAKQa,E,4MACjBC,MAAQ,CACJC,MAAO,KACPC,UAAU,EACVC,aAAc,GACdnB,YAAa,I,EAsBjBK,oBAAsB,SAACQ,GACnB,EAAKO,SAAS,CAACpB,YAAaa,K,EAGhCQ,OAAS,SAACC,EAAOC,GACb,OAAyB,IAAjBA,EAAMpB,OAEVmB,EAEAA,EAAME,QACF,SAAAC,GAAI,OAAIA,EACHC,KACAC,cACAC,QAAQL,EAAMI,gBAAkB,M,kEAhC5B,IAAD,OAChBE,MAAM,GAAD,OAzCM,yBAyCN,yBACAC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKb,SAAS,CACVF,UAAU,EACVC,aAAcc,OAGtB,SAAChB,GACG,EAAKG,SAAS,CACVF,UAAU,EACVD,e,+BAuBV,IAAD,EACgDiB,KAAKlB,MAAnDC,EADF,EACEA,MAAOC,EADT,EACSA,SAAUC,EADnB,EACmBA,aAAcnB,EADjC,EACiCA,YAChCmC,EAAcD,KAAKb,OAAOF,EAAcnB,GAE9C,OAAIiB,EACO,yEAAcA,EAAMmB,WACnBlB,EAIJ,sBAAKZ,UAAU,gBAAf,UACI,cAAC,EAAD,CAAQD,oBAAqB6B,KAAK7B,sBAClC,6BAEQ8B,EAAYE,KACR,YAAmD,IAAjDC,EAAgD,EAAhDA,GAAIZ,EAA4C,EAA5CA,KAAMa,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAE1BC,EAAK,IAAIC,KAAKA,KAAKC,MAAML,IAEzBM,EAAK,IAAIF,KAAKA,KAAKC,MAAMJ,IAC/B,OACI,+BACI,mBAAGlC,UAAU,aAAb,SAA0B,mBAAGwC,KAAML,EAAT,SAAoBf,MAC9C,oBAAIpB,UAAU,0BACd,gCACI,oFAAkBoC,EAAGK,WAArB,YAAmCL,EAAGM,aAAtC,YAAsDN,EAAGO,aAAzD,YAAyEP,EAAGQ,SAAW,EAAvF,YAA4FR,EAAGS,WAAa,EAA5G,YAAiHT,EAAGU,kBACpH,gGAAoBP,EAAGE,WAAvB,YAAqCF,EAAGG,aAAxC,YAAwDH,EAAGI,aAA3D,YAA2EJ,EAAGK,SAA9E,YAA0FL,EAAGM,WAA7F,YAA2GN,EAAGO,uBAL7Gd,WAd9B,0F,GAnDce,IAAMC,WC7BvCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.a6b5b6ca.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst _apiGithub = 'https://api.github.com';\n\nconst Search = (props) => {\n    const [searchQuery, setSearchQuery] = useState('');\n\n    const onSearchQueryChange = (e) => {\n        e.preventDefault();\n        const newSearchQuery = e.target.value;\n        setSearchQuery(newSearchQuery);\n        props.onSearchQueryChange(newSearchQuery);\n    }\n\n    const onReset = () => {\n        setSearchQuery('');\n        props.onSearchQueryChange('');\n    };\n\n    const button = searchQuery.length > 0 ? <button onClick={onReset}>Reset</button> : null;\n\n    return (\n        <div className=\"search-container\">\n            <input\n                type=\"text\"\n                placeholder=\"Type to search\"\n                value={searchQuery}\n                onChange={onSearchQueryChange}\n            />\n            {button}\n        </div>\n    )\n};\n\nexport default class App extends React.Component {\n    state = {\n        error: null,\n        isLoaded: false,\n        repositories: [],\n        searchQuery: ''\n    }\n\n    componentDidMount() {\n        fetch(`${_apiGithub}/users/myatniy/repos`)\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        repositories: result\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    onSearchQueryChange = (newSearchQuery) => {\n        this.setState({searchQuery: newSearchQuery});\n    }\n\n    search = (items, query) => {\n        return (query.length === 0)\n            ?\n            items\n            :\n            items.filter(\n                item => item\n                    .name\n                    .toLowerCase()\n                    .indexOf(query.toLowerCase()) > -1\n            );\n    };\n\n    render() {\n        const {error, isLoaded, repositories, searchQuery} = this.state;\n        const visibleData = this.search(repositories, searchQuery);\n\n        if (error) {\n            return <div>Ошибка: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Загрузка...</div>;\n        } else {\n            return (\n                <div className=\"app-container\">\n                    <Search onSearchQueryChange={this.onSearchQueryChange}/>\n                    <ul>\n                        {\n                            visibleData.map(\n                                ({id, name, created_at, updated_at, html_url}) => {\n                                    // created_at\n                                    const ca = new Date(Date.parse(created_at));\n                                    // updated_at\n                                    const ua = new Date(Date.parse(updated_at));\n                                    return (\n                                        <li key={id}>\n                                            <p className=\"repository\"><a href={html_url}>{name}</a></p>\n                                            <hr className=\"under-repository-name\" />\n                                            <div>\n                                                <span>Создан: {`${ca.getHours()}:${ca.getMinutes()}:${ca.getSeconds()} ${ca.getDay() + 1}.${ca.getMonth() + 1}.${ca.getFullYear()}`}</span>\n                                                <span>Обновлен: {`${ua.getHours()}:${ua.getMinutes()}:${ua.getSeconds()} ${ua.getDay()}.${ua.getMonth()}.${ua.getFullYear()}`}</span>\n                                            </div>\n                                        </li>\n                                    );\n                                }\n                            )\n                        }\n                    </ul>\n                </div>\n            );\n        }\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}